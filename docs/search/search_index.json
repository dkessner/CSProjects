{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Honors CS Projects!","text":"<p>Honors Computer Science Projects</p> <p>Marlborough School, Los Angeles</p> <p>2025-26</p> <p>Dr. Kessner<p> <p>Hello CS Projects coders!</p> <p>This class is for you to explore new areas of computer science, and to work on projects that are interesting to you.</p> <p>Some ideas:</p> <ul> <li> <p>video projections for the All School Dance Concert, in collaboration with our   student dancers and choreographers</p> </li> <li> <p>special effects for the theater productions</p> </li> <li> <p>interactive data visualization in collaboration with the UltraViolet</p> </li> <li> <p>anything else you're interested in!</p> </li> </ul> <p>I'm looking forward to seeing what you create this year!</p> <p>Dr. Kessner</p>"},{"location":"about/","title":"About","text":""},{"location":"about/#cs-projects","title":"CS Projects","text":"<p>This is the website for the Honors Computer Science Projects course at Marlborough School in Los Angeles, taught by Dr. Darren Kessner, Program Head for Computer Science and Software Innovation.</p> <p>Thank you to Marlborough School for continuing to support equity and innovation in education.</p> <p> <p></p>"},{"location":"about/#project","title":"Project","text":"<p>CSProjects repo </p> <p>The previous version of this website used JupyterBook.     </p> <p>CSProjects 2023-25 website CSProjects 2023-25 repo </p> <p>The previous previous version of this website used the Jekyll static site generator: CSProjects 2021-22 website CSProjects 2021-22 repo</p>"},{"location":"about/#license","title":"License","text":"<p>Code: MIT license</p> <p>Text: Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA 4.0)</p>"},{"location":"about/#dependencies","title":"Dependencies","text":"<p>This project relies solely on open source software and tools.</p> <ul> <li>Mkdocs Material:   documentation and static site generator, built on top of a large collection   of open source software, including Python,   LaTeX, and   Markdown.</li> <li>p5.js: JavaScript graphics library for creative coding</li> <li>Comic Mono: font for the code examples</li> </ul>"},{"location":"about/#resources","title":"Resources","text":"<p>To learn more about open source software, public data, and open educational resources for teachers: https://dkessner.github.io/TeacherResources/</p> <p>Dr. Darren Kessner Program Head of Computer Science and Software Innovation Marlborough School Los Angeles, California https://dkessner.github.io http://stem.marlborough.org https://www.marlborough.org/ </p>"},{"location":"course_expectations/","title":"Course Expectations","text":"<p>Honors Computer Science Projects 2025-26 Dr. Kessner Marlborough School, Los Angeles </p> <p>Free periods: CE in D215</p>"},{"location":"course_expectations/#assignments-and-grading","title":"Assignments and Grading","text":"<p>Your grade will be based on managing your software projects, and delivering them on time.  You might have multiple (or even simultaneous) projects.</p> <p>You will present your project(s) regularly at Show &amp; Tell.  You will also document your progress in your Project Log.  At each checkpoint (Show &amp; Tell + Project Log update) you will have a set of grades based on the class learning targets.</p>"},{"location":"course_expectations/#weekly-schedule","title":"Weekly schedule","text":"<p>Most of the class periods will be dedicated time for your projects.</p> <p>I will give short demos periodically.  Let me know if there is something in particular you want to see.</p> <p>You will be presenting at Show &amp; Tell every 3 weeks, the last class of the week.</p> <p>If you're involved in a production (e.g. the All School Dance Concert) you will likely need to spend extra time outside of class.  During those times, please feel free to use class time as you need it.</p>"},{"location":"course_expectations/#resources","title":"Resources","text":"<p>All software and/or other learning materials for the course will be free and open source.</p>"},{"location":"course_expectations/#usage-of-artificial-intelligence-ai","title":"Usage of Artificial Intelligence (AI)","text":"<p>Recent advances in AI have resulted in great improvements in AI-based code generation.  Generated code may be correct, but also may have subtle bugs. Remember that your goal in this course is for you to improve your coding skills.  </p> <p>If you feel that AI will help your project, you are welcome to use it, subject to the following:</p> <ul> <li> <p>You must fully document any use of AI code generation in your project.  You   may not take credit for code that you did not write.</p> </li> <li> <p>You are responsible for getting your program to run, including debugging all   issues.  Remember that debugging your own code is difficult enough; debugging   AI-generated code can be even more difficult.</p> </li> <li> <p>Prefer open source, locally installed AI to 3rd party web services.   If you do use a 3rd party web service:</p> <ul> <li>Be sure not to submit any identifying information</li> <li>Abide by the service's license agreement</li> <li>Abide by Marlborough's Student Technology Responsible Use Policy</li> </ul> </li> </ul>"},{"location":"project_ideas/","title":"Project ideas","text":"<ul> <li>video games</li> <li>generative art</li> <li>mathematical simulations</li> <li>data visualization</li> <li>3D graphics / VR</li> <li> <p>AI / Machine learning applications</p> <ul> <li>face detection</li> <li>pose detection</li> <li>speech recognition</li> <li>generative AI</li> </ul> </li> <li> <p>Arduino</p> <ul> <li>wearable / physical computing</li> <li>interactive LEDs, sensors</li> </ul> </li> <li> <p>Raspberry Pi</p> <ul> <li>Linux command line, software installation</li> <li>web server installation</li> <li>motor control / robotics</li> </ul> </li> </ul>"},{"location":"project_ideas/#video-projections-special-effects","title":"Video Projections / Special Effects","text":"<p>You will have the opportunity to work with dancers/choreographers to create video projections for the All School Dance Concert (Processing or p5.js).</p> <p>We will also be working with the theater productions to create special effects to be used during the performances.</p> <p>2023 concert 2022 concert 2021 concert 2019 concert 2018 concert</p>"},{"location":"project_ideas/#past-projects-data-analysis-and-visualization","title":"Past Projects - Data Analysis and Visualization","text":"<p>Interactive 2024 Election Map - Nola '25 Election Map prototype</p> <p>LA Food Policy Council - Wyeth '24, Chesney '23 Youth Incarceration - Isabelle '20</p>"},{"location":"project_ideas/#past-projects-visual-novels-narrative-video-games","title":"Past Projects - Visual Novels / Narrative Video Games","text":"<p>If you are interested in learning web development (HTML/CSS/Javascript), you could also work on web-based visual novels.</p> <p>World History Visual Narratives 2023 World History Visual Narratives 2022</p> <p>These projects use the  Monogatari visual novel engine. I used this engine to make Alice's Adventures, a project for my niece Alice.</p>"},{"location":"project_ideas/#past-projects","title":"Past Projects","text":"<p>2023 Projects 2022 Projects 2021 Projects (videos unavailable) 2020 Projects (videos unavailable) 2019 Projects </p>"},{"location":"schedule/","title":"Class","text":""},{"location":"schedule/#textbooks","title":"Textbooks","text":"<ul> <li>Darren Kessner, Practical Coding in Python</li> </ul>"},{"location":"schedule/#other-resources","title":"Other Resources","text":"<ul> <li>Future Coder Python tutorials</li> </ul>"},{"location":"schedule/#schedule-2024-25","title":"Schedule 2024-25","text":""},{"location":"schedule/#semester-1","title":"Semester 1","text":"<p>16 weeks, 33 class meetings</p> Week Date # Topics 1 Aug 25 3 GitHub repo setup  Python Unit 1  Coding Assignment 1 2 Sep 1 2 3 Sep 8 2 4 Sep 15 2 5 Sep 22 2 6 Sep 29 2 7 Oct 6 2 8 Oct 13 2 9 Oct 20 2 10 Oct 27 2 11 Nov 3 2 12 Nov 10 2 13 Nov 17 2 ASDC Tech Week -- Nov 25 - Thanksgiving Break 14 Dec 1 3 All School Dance Concert Dec 4-5 15 Dec 8 2 CS Education Week 16 Dec 15 1"},{"location":"schedule/#semester-2","title":"Semester 2","text":"<p>19 weeks, 40 class meetings</p> Week Date # Topics 1 Jan 5 2 2 Jan 12 3 3 Jan 19 2 4 Jan 26 2 5 Feb 2 2 6 Feb 9 2 7 Feb 16 2 8 Feb 23 2 9 Mar 2 2 10 Mar 9 2 11 Mar 16 2 -- Mar 23 2 -- Mar 30 - Spring Break 12 Apr 6 - Spring Break 13 Apr 13 3 14 Apr 20 2 15 Apr 27 2 Celebration of Innovation Thu Apr 30, 5-9pm 16 May 4 2 17 May 11 3 18 May 18 2 19 May 26 1 No more CS Projects :("},{"location":"syllabus/","title":"Syllabus","text":""},{"location":"syllabus/#course-description","title":"Course Description","text":"<p>Honors Computer Science Projects </p> <p>This course is for students who would like to continue their study of computer science beyond AP Computer Science A, and to apply the skills they learned in that course. The class provides a workshop / lab environment for students to work independently on individual or group projects, to improve their coding skills, and to explore and tinker with new technologies. Students have freedom to pick their own projects, and are encouraged to try things they have never done before. They may choose any area of computer science, including but not limited to: computer graphics, video games, virtual reality, mini-computers / microcontrollers (e.g. Raspberry Pi, Arduino), physical / wearable computing, interactive art, simulation, data analysis, scientific applications, programming languages, web development, mobile development. Students may enroll in this class multiple times for credit. </p>"},{"location":"syllabus/#project-phases","title":"Project Phases","text":""},{"location":"syllabus/#client-consultation-and-project-scoping","title":"Client consultation and project scoping","text":"<ol> <li> <p>Students identify the area where they want to work.    Examples:</p> <ul> <li>video projections / special effects in collaboration with the Performing Arts Department</li> <li>data visualization in collaboration with the Journalism classes</li> <li>web development in collaboration with the Social Justice program</li> </ul> </li> <li> <p>Students are matched with one or more clients / customers.    Examples:</p> <ul> <li>All School Dance Concert: clients are student dancers/choreographers</li> <li>Journalism: clients are the school newspaper editors</li> <li>Social Justice: the clients are representatives from local non-profit   organizations</li> </ul> </li> <li> <p>Students have their first meetings with their clients where they agree on the    scope of work and project timeline.</p> </li> <li> <p>Students start a Project Log that includes:</p> <ul> <li>scope of work</li> <li>timeline<ul> <li>research</li> <li>design</li> <li>proof of concept</li> <li>v1.0 and iteration with feedback</li> <li>final delivery</li> </ul> </li> </ul> </li> <li> <p>Students continue to update their Project Logs each week, and they give    status updates during Show &amp; Tell in class.  </p> </li> </ol>"},{"location":"syllabus/#research-and-implementation-plan","title":"Research and Implementation Plan","text":"<ol> <li> <p>Students research potential ways to design and implement their project.    Students consider different options for:</p> <ol> <li>programming language(s) </li> <li>software libraries</li> <li>hardware requirements</li> </ol> <p>For example, for software projects involving video input, students might use Java, Javascript, or Python, depending on the specific application.  For web development, students generally use Javascript, but also have the option to build static sites with Python.</p> </li> <li> <p>Students formalize their implementation plan as part of their Project Status document.  The students meet with their clients to explain their plan (on a high level).  Students present their plan in more detail in class to their classmates, to get feedback and ideas about implementation.</p> </li> </ol>"},{"location":"syllabus/#implementation-and-iteration","title":"Implementation and Iteration","text":"<p>In this phase of the project, students actually write the code for the project.  </p> <ol> <li> <p>Students keep all project work in a GitHub repository.  </p> </li> <li> <p>Students give regular updates on their project status in class.  </p> </li> <li> <p>After creating a proof-of-concept, students start regular meetings with    their client to show their progress and to incorporate client feedback.  </p> </li> </ol>"},{"location":"syllabus/#final-delivery","title":"Final Delivery","text":"<ol> <li> <p>The student delivers the final project to the client. For many projects,    this involves a public performance (e.g. dance concerts, theater    productions).   For example, for collaborations with the Visual Arts    department, this involves running their video projections at the All School    Dance Concert or during theater productions.  For Journalism collaborations,    this involves ensuring that they meet all deadlines for the production of    their issues.  For Social Justice collaborations, this involves a final    client meeting to deliver the website or data visualization.  </p> </li> <li> <p>In all cases, students also present their final projects in 3 ways:</p> <ul> <li>attendance at the Celebration of Innovation event at the end of the school year</li> <li>project poster to showcase their work</li> <li>video walkthrough of the project, where they give a demonstration of the   project and also describe design and implementation details.</li> </ul> </li> </ol>"},{"location":"syllabus/#learning-targets","title":"Learning Targets","text":"<p>Students are assessed on the following learning targets during their regularly scheduled code reviews (Show &amp; Tell).</p>"},{"location":"syllabus/#discipline-specific-conceptual-knowledge","title":"Discipline-Specific Conceptual Knowledge","text":"<p>Learning the principles of software design and complexity management. Learning how to debug, handle errors, and validate software through testing.</p> <ul> <li>skills (depends on project)<ul> <li>language / target platform (e.g. Javascript for web pages,   Processing for video games, Python for data analysis)</li> <li>domain-specific techniques (e.g. 3D graphics effects,   exploratory data analysis)</li> </ul> </li> <li>practice:<ul> <li>implementation of features on their project(s)</li> </ul> </li> <li>assessment:<ul> <li>regularly scheduled code reviews</li> <li>final presentation / performance</li> </ul> </li> </ul>"},{"location":"syllabus/#communication-dissemination","title":"Communication &amp; Dissemination","text":"<p>Participating in code reviews, in which they present their projects to their classmates, communicate problems and solutions, and learn to give and incorporate feedback.</p> <ul> <li>skills:<ul> <li>presenting technical knowledge in an understandable way</li> <li>communicating the high-level design of a project</li> <li>explaining problems and potential solutions</li> </ul> </li> <li>practice:<ul> <li>presenting project at code reviews</li> </ul> </li> <li>assessment:<ul> <li>regularly scheduled code reviews</li> <li>final presentation / performance</li> </ul> </li> </ul>"},{"location":"syllabus/#collaboration","title":"Collaboration","text":"<p>Working on projects with classmates, and also collaborate with students in other fields (e.g. social sciences, community partnerships, performing and visual arts, scientific research)</p> <ul> <li>skills:<ul> <li>collaborating with classmates on coding assignments or projects</li> <li>communicating details about problems or errors</li> <li>describing advantages or disadvantages of potential   implementations</li> </ul> </li> <li>practice:<ul> <li>working together on coding assignments</li> <li>group software projects</li> </ul> </li> <li>assessment:<ul> <li>regularly scheduled code reviews</li> <li>final presentation / performance</li> </ul> </li> </ul>"},{"location":"syllabus/#agency-leadership-professionalism","title":"Agency, Leadership &amp; Professionalism","text":"<p>Managing projects by tracking progress on features and bugs, and prioritizing and scheduling coding tasks.</p> <ul> <li>skills:<ul> <li>tracking and making regular progress on software projects</li> <li>communicating progress and anticipating roadblocks</li> <li>responding to feedback from clients or other collaborators</li> <li>delivering software project on time</li> </ul> </li> <li>practice:<ul> <li>work on long-term software projects</li> </ul> </li> <li>assessment:<ul> <li>regularly scheduled code reviews</li> <li>final presentation / performance</li> </ul> </li> </ul>"},{"location":"syllabus/#design-process","title":"Design Process","text":"<p>Using design thinking to model and break down problems. Learning to create and implement useful abstractions, and prototype and evaluate solutions.</p> <ul> <li>skills:<ul> <li>research and prototyping</li> <li>controlling code complexity through the use of language features   (e.g. functions and classes) and design patterns</li> <li>evaluating potential implementations</li> </ul> </li> <li>practice:<ul> <li>long-term software projects</li> </ul> </li> <li>assessment:<ul> <li>regularly scheduled code reviews</li> <li>final presentation / performance</li> </ul> </li> </ul>"},{"location":"syllabus/#reference","title":"Reference","text":"<p>(From the California Computer Science K-12 Standards)</p> <p>The computer science core practices include: </p> <ol> <li>Fostering an Inclusive Computing Culture </li> <li>Collaborating Around Computing </li> <li>Recognizing and Defining Computational Problems </li> <li>Developing and Using Abstractions </li> <li>Creating Computational Artifacts </li> <li>Testing and Refining Computational Artifacts </li> <li>Communicating About Computing</li> </ol> <p>Links:</p> <ul> <li>CA CS Strategic Implementation Plan</li> <li>CA CS K-12 Standards</li> </ul>"}]}